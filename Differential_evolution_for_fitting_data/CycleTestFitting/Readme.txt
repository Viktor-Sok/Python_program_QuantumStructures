     <<<<<<<<<< НЕКОТОРЫЕ КОММЕНТАРИИ ПО РАБОТЕ С ПРОГРАММОЙ>>>>>>>>>>>
<<<<<<<<<<<<<<<<<< ДЛЯ ВЫЧИСЛЕНИЯ ИЗОТРОПНОЙ ЧАСТИ >>>>>>>>>>>>>>>>>>>>>>>>>

1.Структура программы:

Программа написана в двух файлах "Start_program_from_here.py" и "Module_of_implementations.py".
Код осуществляющий вычисления находятся в Module_of_implementations, а исходные данные вводимые пользователем в  Start_program_from_here. Для корректной работы эти файлы должны лежать в одной папке, которую далее будем называть корневой.

2.Как пользоваться программой:

а). В корневую папку нужно поместить, помимо двух файлов программы, экспериментальные данные в формате .dat, например 2020-11-05 PBS ADH_2mg_ml NADH_40uM 720nm  250mW Sh9 ZET436_10 2000s ZYLZYZYZ_exp.dat 

б). Поместить файл функции отклика IRF в формате .dat, первый столбик  в котором - время, а второй непосредственно IRF. Если необходимо считать средневзвешанный IRF, то необходимо это сделать отдельно - в Origin или написать небольшую программу на Python, и уже в корневую папку помещать файл в указанном выше формате.

Замечание: можно поместить сразу несколько файлов экспериментальных файлов и IRF-ов в корневую папку.

в).В файле "Module_of_implementations.py" в блок под названием "Define model decay function here" необходимо ввести желаемую модельную функцию - 2,3 или 4 экспоненциальные модели затухания флуоресценции. Для удобства эти модели уже набраны в файле "Start_program_from_here.py" и от туда можно скопировать нужную.

г). В файле "Module_of_implementations.py" в функции finding_the_minimum()(строка 90) вызывается дифференциальная эволюция в виде:
result = differential_evolution(max_likelyhood_estimator, bounds,  mutation = mut,
                                        recombination = recomb, maxiter = maxiter,  popsizПЕe = pops )

Первым параметром у которой является целевая функция, которая минимизируется, есть возможность выбрать:
max_likelyhood_estimator или least_square_roots.

д). В файле "Start_program_from_here.py" ввести имя файла обрабатываемых экспериментальных данных и имя фала IRF, ввести темновой ток для X и Y каналов Затем выбрать желаемые экспозиции указывая их в переменной colm. Например colm = [[1,2,3,4],[7,8,9,10]] означает , что мы выбрали две экспозиции, одной экспозиции соответствует [ZY,ZX, YY, YX]. Где ZY и ZX используются для расчета G-фактора, а YY и YX для изотропной части. Экспозиции можно выбирать в любом порядке и колличестве.

е). Указать границы (bounds) поиска для параметров, колличество параметров должно соответствовать 2,3 или 4 экспоненциальной модели, ненужные параметры закомментировать/ раскомментировать.

ж). Оставшиеся параметры относятся к дифференциальной эвлюции и обсуждены ниже в пункте 
 "7.О дифференциальной  эволюции и целевой функции" в данном Readme.

г). Запустить программу и ждать получения cообщения в диалоговом окне Python Shell :
Your calculations have been finished! Go to the program folder to see the results.


3.Контроль результатов расчета в диалоговом окне.
 
После запуска программы появится диалоговое окно Python Shell, в котором будет выводиться информация по обработке каждой экспозиции. Например:

1 Program Executed in 18.838946163 sec 
2 Has optimization been finished succecfully? :  False
3 Reason for canceling calculations:  Maximum number of iterations has been exceeded.
4 [2382.85622638   18.43508079  505.95216907  193.54691086  400.40241809 3140.07033042]
5 [(0, 10000), (0, 100), (0, 7000), (0, 7000), (0, 7000), (0, 7000)]
Расшифровка строк:
1. Время расчёта данной экспозиции в секундах.
2. Результат оптимизации - должно быть True
3. Причина выхода из процесса оптимизации - должно быть Optimization terminated successfully.
   Если появилось Maximum number of iterations has been exceeded - надо увеличить колличество итераций maxiter в файле "Start_program_from_here.py" (по умолчанию стоит 10 000 итераций)
4.5. Выведенные оптимальные параметры и границы, они не должны выходить за границы.

Замечание: Если при обработке нескольких экспозиций потоком - одна не удачно посчиталось по описанным выше критериям, то её можно пересчитать отдельно потом, указав её в colm =[[ZY,ZX, YY, YX]].

Замечание: имеет смысл хотя бы дваджы пересчитывать одно и тоже и сравнивать оптимальные параметры, т.к. как в Anaconde , так и в IDLE иногда что -то может "глючить", что может быть связано с чем угодно: от глюков в интерпретаторе, до каких то конфликтов с другими системными процессами..., точно не понятно.

4.Место хранения результатов расчёта.

В корневой папке, где лежат два файла программы, буде создана папка с именем соответствующего эксперимента, например 2020-11-05 PBS ADH_2mg_ml NADH_40uM 720nm  250mW Sh9 ZET436_10 2000s ZYLZYZYZ_exp. Внутри данной папки будут создаваться отдельные папки для каждой экспозиции с названиями типа : 1_2_3_4 или 7_8_9_10  и т.п., в каждой из них будут находиться выводимые графики, а также excel файл с оптимальными параметрами. Помимо этих папок, там же будут находиться дфа файла .dat с названиями типа : Fit_2020-11-05 PBS ADH_2mg_ml NADH_40uM 720nm  250mW Sh9 ZET436_10 2000s ZYLZYZYZ_exp.dat
 и  Param_2020-11-05 PBS ADH_2mg_ml NADH_40uM 720nm  250mW Sh9 ZET436_10 2000s ZYLZYZYZ_exp.dat.
Эти файлы созданы для непосредственного открытия в ориджин и содержат все обработанные потоком экспозиции.

5. Условные обозначения внутри фалов .dat, которые предназначены для открытия в ориджин.

В файле типа 
Fit_2020-11-05 PBS ADH_2mg_ml NADH_40uM 720nm  250mW Sh9 ZET436_10 2000s ZYLZYZYZ_exp.dat
будут следующие колонки, например
Time	Fit_3_4     Exp_3_4	Fit_9_10	Exp_9_10

,где Fit_3_4 соответствует подгоночной кривой для экспозиции 1234, где числа соответствуют ZY ZX YY YX.
Exp_3_4 - это экспериментальные точки для данной экспозиции.

В файле типа
Param_2020-11-05 PBS ADH_2mg_ml NADH_40uM 720nm  250mW Sh9 ZET436_10 2000s ZYLZYZYZ_exp.dat
будет таблица вида :
  		T	a0	a1	a2	t1	t2	n_a1	n_a2
Expos_3_4
Expos_9_10

В данном примере дана таблица для двух экспозиций 3_4 и 9_10. (1 2 3 4 и 7 8 9 10)
T - время сдвига IRF относительно изотропного сигнала
a0 - свободный член в экспоненциальной модели
n_a1, n_a2 - нормированные амплитуды: a1/(a1+a2) и a2/(a1+a2) соответственно.

6.Связь названий некоторых переменных в данной программе с названиями из программы в Anacondе соответствено:

Anaconda: n , weight.
Данная программа: int(T/dt), sigma2.
T - cдвиг IRF относительно изотропного сигнала, dt - минимальный интервал времени между ближайшими экспериментальными точками.

7.О дифференциальной эволюции и целевой функции.

Параметры диф. эволюции из файла "Start_program_from_here.py" имеют вид:

mut = 0.5
recomb = 0.3
pops = 10
maxiter = 10000

Здесь представлены, по моему мнению, достаточно хорошо подобранные значения параметров и проверенные мною на тестовых функциях имитирующих экспериментальные данные, сгенерированных "размытием" по гауссу.
Причем эти значения я взял из статьи людей, по алгоритму которых реализована библиотека диф. эволюции в Питоне. 
После изучения ряда источников- несколько фактов о диф. эволюции, которые может пригодятся человеку, который захочет здесь что то модифицировать:
- математически не доказано, что диф. эволюция сходится к миниму, это только можно подтверждать практически - находя минимумы тестовых функций, которые известны аналитически.
- также нет какого-то математического способа определить оптимальные параметры, их следую подбирать индивидуально, под конкретную задачу с конкретной многомерной поверхностью, в которой ищется минимум.
- увеличение особей в популяции не обязательно будет улучшать точность, а иногда даже её ухудшать.
   При этом время вычислений значительно возрастает.

Замечание 1:
Диф. эволюция реализованна в библиотеке Питона имеет ещё несколько параметров помимо четырёх вышеуказанных, учет их в моих численных экспериментах на модельных функция - либо не приводил к улучшению результата оптимизации, либо даже его ухудшал. Поэтому если кто-то захочет что то подкрутить в параметров, надо всё осторожно тестировать.

Замечание2: Существеенным отличием в парамертрах данной программы от программы реализованной в Анаконде - это pops, который здесь 10, а там 60.Полагаю, что в Anaconde  была совершена опечатка, т.к. я руководствовался рекомендациями выставления popsize из статей, а также проверял точность оптимизации на модельных функциях. В статьях, как и в библиотеке Питона, popsize означает что в начале у популяции будет popsize*D векторов-особей, где D число параметров, которые оптимизируем. Например для 3-х экспоненциальной модели : параметры (T,a0,a1,a2,a3,t1,t2,t3) - их всего 8. Поэтому когда мы пишем в программе popsize = 10,  это означает что будет сгенериравана популяция из 10*8= 80 векторов-особей.
Рекомендованные значения popsize из статей - от 2 до 15.